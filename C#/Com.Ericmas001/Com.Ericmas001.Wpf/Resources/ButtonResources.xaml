<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:cc="clr-namespace:Com.Ericmas001.Wpf.CustomControls">
    <!-- FocusVisual -->

    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="2" StrokeThickness="1" Stroke="#60000000" StrokeDashArray="1 2" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type Button}" x:Key="MiniCrossButton">

        <!-- Simple properties that we set. -->
        <Setter Property="SnapsToDevicePixels" Value="false" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Height" Value="12" />
        <Setter Property="Width" Value="12" />

        <!-- The control template. -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="Transparent">

                        <!-- The background of the button, as an ellipse. -->
                        <Ellipse x:Name="backgroundEllipse" />

                        <!-- A path that renders a cross. -->
                        <Path x:Name="ButtonPath" Margin="3" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="Uniform"
                                  Stroke="#FF8f949b" StrokeThickness="1.5" StrokeStartLineCap="Square" StrokeEndLineCap="Square">
                            <Path.Data>
                                <PathGeometry>
                                    <PathGeometry.Figures>
                                        <PathFigure StartPoint="0,0">
                                            <LineSegment Point="5,5"/>
                                        </PathFigure>
                                        <PathFigure StartPoint="0,5">
                                            <LineSegment Point="5,0"/>
                                        </PathFigure>
                                    </PathGeometry.Figures>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                    </Grid>

                    <!-- The triggers. -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonPath" Property="Stroke" Value="#FFc13535"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="ButtonPath" Property="StrokeThickness" Value="2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button -->
    <Style TargetType="cc:CoolButton" x:Key="CoolButtonStyle" x:Name="ViBlendStyle">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="Opacity" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="cc:CoolButton">
                    <Border TextBlock.Foreground="{TemplateBinding Foreground}" x:Name="Border" CornerRadius="5">
                        <Border.Background>
                            <SolidColorBrush  Color="{Binding Path=ButtonColor, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border.Background>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1" />
                                    <VisualTransition GeneratedDuration="0:0:0.4" To="Disabled" />
                                    <VisualTransition GeneratedDuration="0:0:0.4" To="Normal" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Opacity)"
                                                Storyboard.TargetName="Border">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.8" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Opacity)"
                                                Storyboard.TargetName="Border">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.9" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Opacity)"
                                                Storyboard.TargetName="Border">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <!--<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                Storyboard.TargetName="Border">
                                            <EasingColorKeyFrame KeyTime="0" Value="DarkGray" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                Storyboard.TargetName="Border">
                                            <EasingColorKeyFrame KeyTime="0" Value="Black" />
                                        </ColorAnimationUsingKeyFrames>-->
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Opacity)"
                                                Storyboard.TargetName="Border">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <StackPanel Orientation="{Binding Path=TextImageOrientation, RelativeSource={RelativeSource TemplatedParent}}">
                            <Image Source="{Binding Path=ButtonImage, RelativeSource={RelativeSource TemplatedParent}}" 
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                Height="{Binding Path=ButtonImageSize, RelativeSource={RelativeSource TemplatedParent}}"
                                Width="{Binding Path=ButtonImageSize, RelativeSource={RelativeSource TemplatedParent}}"
                                Margin="{Binding Path=ImageMargin, RelativeSource={RelativeSource TemplatedParent}}" />
                            <ContentPresenter Margin="{Binding Path=TextMargin, RelativeSource={RelativeSource TemplatedParent}}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="cc:CoolButton" BasedOn="{StaticResource CoolButtonStyle}"/>

    <Style TargetType="cc:CoolButton" BasedOn="{StaticResource CoolButtonStyle}" x:Key="CoolButtonGreen">
        <Setter Property="ButtonColor" Value="Green"/>
    </Style>
    <Style TargetType="cc:CoolButton" BasedOn="{StaticResource CoolButtonStyle}" x:Key="CoolButtonBlue">
        <Setter Property="ButtonColor" Value="DodgerBlue"/>
    </Style>
    <Style TargetType="cc:CoolButton" BasedOn="{StaticResource CoolButtonStyle}" x:Key="CoolButtonOrange">
        <Setter Property="ButtonColor" Value="DarkOrange"/>
    </Style>
    <Style TargetType="cc:CoolButton" BasedOn="{StaticResource CoolButtonStyle}" x:Key="CoolButtonRed">
        <Setter Property="ButtonColor" Value="OrangeRed"/>
    </Style>
    <Style TargetType="cc:CoolButton" BasedOn="{StaticResource CoolButtonStyle}" x:Key="CoolButtonBlack">
        <Setter Property="ButtonColor" Value="Black"/>
    </Style>
    <Style TargetType="cc:CoolButton" BasedOn="{StaticResource CoolButtonStyle}" x:Key="CoolButtonGold">
        <Setter Property="ButtonColor" Value="Goldenrod"/>
    </Style>
    <Style TargetType="cc:CoolButton" BasedOn="{StaticResource CoolButtonStyle}" x:Key="CoolButtonPurple">
        <Setter Property="ButtonColor" Value="MediumOrchid"/>
    </Style>
    <Style TargetType="cc:CoolButton" BasedOn="{StaticResource CoolButtonStyle}" x:Key="CoolButtonPink">
        <Setter Property="ButtonColor" Value="HotPink"/>
    </Style>
    <Style TargetType="cc:CoolButton" BasedOn="{StaticResource CoolButtonStyle}" x:Key="CoolButtonSteel">
        <Setter Property="ButtonColor" Value="DarkSlateGray"/>
    </Style>
    <Style TargetType="cc:CoolButton" BasedOn="{StaticResource CoolButtonStyle}" x:Key="CoolButtonTurquoise">
        <Setter Property="ButtonColor" Value="CadetBlue"/>
    </Style>


</ResourceDictionary>