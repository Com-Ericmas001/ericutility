<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:cv="clr-namespace:Com.Ericmas001.Wpf.Converters">

    <!-- Simple Expander Button's Template-->
    <ControlTemplate x:Key="SimpleExpanderButtonTemp" TargetType="{x:Type ToggleButton}">
        <Border x:Name="ExpanderButtonBorder"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Padding="{TemplateBinding Padding}"
                    >
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Rectangle Fill="Transparent"
                               Grid.ColumnSpan="2"/>
                <Ellipse Name="Circle"
                         Grid.Column="0"
                         Stroke="DarkGray"
                         Width="20"
                         Height="20"
                         HorizontalAlignment="Center"
                         VerticalAlignment="Center"
                         />
                <Path x:Name="Sign"
                      Grid.Column="0"
                      Data="M 0,5 H 10 M 5,0 V 10 Z"
                      Stroke="#FF666666"
                      Width="10"
                      Height="10"
                      StrokeThickness="2"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      RenderTransformOrigin="0.5,0.5"
                      />
                <ContentPresenter x:Name="HeaderContent"
                                  Grid.Column="1"
                                  Margin="4,0,0,0"
                                  ContentSource="Content"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <!--Change the sign to minus when toggled-->
            <Trigger Property="IsChecked"
                         Value="True">
                <Setter Property="Data" TargetName="Sign" Value="M 0,5 H 10 Z"/>
            </Trigger>

            <!-- MouseOver, Pressed behaviours-->
            <Trigger Property="IsMouseOver"
                                 Value="true">
                <Setter Property="Stroke"
                                    Value="#FF3C7FB1"
                                    TargetName="Circle"/>
                <Setter Property="Stroke"
                                    Value="#222"
                                    TargetName="Sign"/>
            </Trigger>
            <Trigger Property="IsPressed"
                                 Value="true">
                <Setter Property="Stroke"
                                    Value="#FF526C7B"
                                    TargetName="Circle"/>
                <Setter Property="StrokeThickness"
                                    Value="1.5"
                                    TargetName="Circle"/>
                <Setter Property="Stroke"
                                    Value="#FF003366"
                                    TargetName="Sign"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Simple Expander Template-->
    <ControlTemplate x:Key="SimpleExpanderTemp" TargetType="{x:Type Expander}">
        <DockPanel>
            <ToggleButton x:Name="ExpanderButton" 
                              DockPanel.Dock="Top"
                              Template="{StaticResource SimpleExpanderButtonTemp}"
                              Content="{TemplateBinding Header}"
                              IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                              OverridesDefaultStyle="True"
                              Padding="1.5,0">
            </ToggleButton>
            <ContentPresenter x:Name="ExpanderContent"
                                  Grid.Row="1" 
                                  Visibility="Collapsed"
                                  DockPanel.Dock="Bottom"/>
        </DockPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="True">
                <Setter TargetName="ExpanderContent" Property="Visibility" Value="Visible"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Animated Expander Button's Template-->
    <ControlTemplate x:Key="AnimatedExpanderButtonTemp" TargetType="{x:Type ToggleButton}">
        <Border x:Name="ExpanderButtonBorder"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Padding="{TemplateBinding Padding}"
                    >
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Rectangle Fill="Transparent"
                               Grid.ColumnSpan="2"/>
                <Ellipse Name="Circle"
                         Grid.Column="0"
                         Stroke="DarkGray"
                         Width="20"
                         Height="20"
                         HorizontalAlignment="Center"
                         VerticalAlignment="Center"
                         />
                <Path x:Name="Arrow"
                      Grid.Column="0"
                      Data="M 1,1.5 L 4.5,5 8,1.5"
                      Stroke="#FF666666"
                      StrokeThickness="2"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      RenderTransformOrigin="0.5,0.5"
                      >
                    <Path.RenderTransform>
                        <RotateTransform Angle="0"/>
                    </Path.RenderTransform>
                </Path>
                <TextBlock x:Name="HeaderContent"
                                      Grid.Column="1"
                                      Margin="4,0,0,0"
                                      FontWeight="Bold" 
                                      Text="{TemplateBinding Content}"  />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <!-- Animate arrow when toggled-->
            <Trigger Property="IsChecked"
                         Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Arrow"
                                                 Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                                 To="180"
                                                 Duration="0:0:0.4"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Arrow"
                                                 Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                                 To="0"
                                                 Duration="0:0:0.4"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>

            <!-- MouseOver, Pressed behaviours-->
            <Trigger Property="IsMouseOver"
                                 Value="true">
                <Setter Property="Stroke"
                                    Value="#FF3C7FB1"
                                    TargetName="Circle"/>
                <Setter Property="Stroke"
                                    Value="#222"
                                    TargetName="Arrow"/>
            </Trigger>
            <Trigger Property="IsPressed"
                                 Value="true">
                <Setter Property="Stroke"
                                    Value="#FF526C7B"
                                    TargetName="Circle"/>
                <Setter Property="StrokeThickness"
                                    Value="1.5"
                                    TargetName="Circle"/>
                <Setter Property="Stroke"
                                    Value="#FF003366"
                                    TargetName="Arrow"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Stretch Out Content Expander's Template,
        Uses: AnimatedExpanderButtonTemp from above-->
    <ControlTemplate x:Key="StretchyExpanderTemp" TargetType="{x:Type Expander}">
        <DockPanel>
            <ToggleButton x:Name="ExpanderButton" 
                              DockPanel.Dock="Top"
                              Template="{StaticResource AnimatedExpanderButtonTemp}"
                              Content="{TemplateBinding Header}"
                              IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                              OverridesDefaultStyle="True"
                              Padding="1.5,0">
            </ToggleButton>
            <ContentPresenter x:Name="ExpanderContent"
                                  ContentSource="Content"
                                  DockPanel.Dock="Bottom"
                                  >
                <ContentPresenter.LayoutTransform>
                    <ScaleTransform ScaleY="0"/>
                </ContentPresenter.LayoutTransform>
            </ContentPresenter>
        </DockPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="ExpanderContent"
                                                 Storyboard.TargetProperty="(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)"                                                 
                                                 To="1"
                                                 Duration="0:0:0.4"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="ExpanderContent"
                                                 Storyboard.TargetProperty="(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)"
                                                 To="0"
                                                 Duration="0:0:0.4"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!-- Slide Out Content Expander's Template, 
        Uses: AnimatedExpanderButtonTemp from above, 
              MultiplyConverter in codebehind-->
    <cv:MultiplyConverter x:Key="multiplyConverter" />
    <ControlTemplate x:Key="RevealExpanderTemp" TargetType="{x:Type Expander}">
        <DockPanel>
            <ToggleButton x:Name="ExpanderButton" 
                              DockPanel.Dock="Top"
                              Template="{StaticResource AnimatedExpanderButtonTemp}"
                              Content="{TemplateBinding Header}"
                              IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                              OverridesDefaultStyle="True"
                              Padding="1.5,0">
            </ToggleButton>
            <ScrollViewer x:Name="ExpanderContentScrollView" DockPanel.Dock="Bottom"
                              HorizontalScrollBarVisibility="Hidden"
                              VerticalScrollBarVisibility="Hidden"
                              HorizontalContentAlignment="Stretch"
                              VerticalContentAlignment="Bottom"
                              >
                <ScrollViewer.Tag>
                    <sys:Double>0.0</sys:Double>
                </ScrollViewer.Tag>
                <ScrollViewer.Height>
                    <MultiBinding Converter="{StaticResource multiplyConverter}">
                        <Binding Path="ActualHeight" ElementName="ExpanderContent"/>
                        <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                    </MultiBinding>
                </ScrollViewer.Height>
                <ContentPresenter x:Name="ExpanderContent" ContentSource="Content"/>
            </ScrollViewer>
        </DockPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="ExpanderContentScrollView"
                                                 Storyboard.TargetProperty="Tag"                                                 
                                                 To="1"
                                                 Duration="0:0:0.4"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="ExpanderContentScrollView"
                                                 Storyboard.TargetProperty="Tag"                                                 
                                                 To="0"
                                                 Duration="0:0:0.4"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="Expander" x:Key="CoolExpanderStyle">
        <Setter Property ="Background" Value="Gray"/>
        <Setter Property ="Padding" Value ="10"/>
        <Setter Property ="BorderBrush" Value ="DimGray"/>
        <Setter Property ="BorderThickness" Value ="1"/>
        <Setter Property ="Margin" Value ="5"/>
        <Setter Property ="HorizontalContentAlignment" Value ="Stretch"/>
        <Setter Property ="Foreground" Value ="White"/>
        <Setter Property ="IsExpanded" Value ="True"/>
        <Setter Property ="VerticalContentAlignment" Value ="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType ="{x:Type Expander}">
                    <Grid>
                        <Border BorderBrush="{TemplateBinding Border.BorderBrush}" Margin ="1" CornerRadius="3" 
									BorderThickness="{TemplateBinding Border.BorderThickness}" 
									Background="White" SnapsToDevicePixels="True" Width="160">
                            <!--<Border.BitmapEffect>
                                <DropShadowBitmapEffect Opacity ="0.5"/>
                            </Border.BitmapEffect>-->
                        </Border>
                        <Border x:Name ="MainBorder" BorderBrush="{TemplateBinding Border.BorderBrush}" CornerRadius="3" 
                                BorderThickness="{TemplateBinding Border.BorderThickness}" Background="{TemplateBinding Panel.Background}" SnapsToDevicePixels="True">
                            <DockPanel>
                                <CheckBox IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                              MinWidth="0" Margin="3" FontWeight="{TemplateBinding TextElement.FontWeight}" 
                                              HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}" 
                                              FontStretch="{TemplateBinding TextElement.FontStretch}" VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}" 
                                              Foreground="{TemplateBinding TextElement.Foreground}" FontFamily="{TemplateBinding TextElement.FontFamily}" 
                                              x:Name="HeaderSite" FontStyle="{TemplateBinding TextElement.FontStyle}" FontSize="{TemplateBinding TextElement.FontSize}" 
                                              MinHeight="0" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" 
                                              Content="{TemplateBinding HeaderedContentControl.Header}" DockPanel.Dock="Top">
                                    <!--<CheckBox.Template>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Border Padding="{TemplateBinding Control.Padding}">
                                                <Grid Background="#00FFFFFF" SnapsToDevicePixels="False">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto" />
                                                    </Grid.ColumnDefinitions>
                                                    <ContentPresenter Margin="4,0,0,0" HorizontalAlignment="Left" x:Name="ContentSite" 
                                                                      VerticalAlignment="Center" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" 
                                                                      RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" Grid.Column="1" />
                                                </Grid>
                                            </Border>
                                        </ControlTemplate>
                                    </CheckBox.Template>-->
                                </CheckBox>
                                <Border x:Name="ExpandSite" Margin ="5,0,5,5" Background ="#77FFFFFF" BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="{TemplateBinding Border.BorderThickness}">
                                    <Border.LayoutTransform>
                                        <ScaleTransform ScaleY ="0"/>
                                    </Border.LayoutTransform>
                                    <ContentPresenter Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" 
                                                      Focusable="False" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                                      Content="{TemplateBinding ContentControl.Content}" DockPanel.Dock="Bottom">
                                    </ContentPresenter>
                                </Border >
                            </DockPanel>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="Expander.IsExpanded" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName ="ExpandSite" Storyboard.TargetProperty ="LayoutTransform.ScaleY" To ="1" Duration ="0:0:0.5"/>
                                        <DoubleAnimation Storyboard.TargetName ="ExpandSite" Storyboard.TargetProperty="Opacity" To ="1" Duration ="0:0:0.5"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName ="ExpandSite" Storyboard.TargetProperty ="LayoutTransform.ScaleY" To ="0" Duration ="0:0:0.5"/>
                                        <DoubleAnimation Storyboard.TargetName ="ExpandSite" Storyboard.TargetProperty="Opacity" To ="0" Duration ="0:0:0.5"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
            <!--<Setter.Value>
                <ControlTemplate TargetType="Expander">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <CheckBox IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Content="{TemplateBinding Header}" />
                        <ContentControl x:Name="body" Grid.Row="1" Content="{TemplateBinding Content}" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="body" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>-->
        </Setter>
    </Style>

    <Style TargetType="Expander" BasedOn="{StaticResource CoolExpanderStyle}" x:Key="CoolExpanderGreen">
        <Setter Property="Background" Value="Green"/>
    </Style>
    <Style TargetType="Expander" BasedOn="{StaticResource CoolExpanderStyle}" x:Key="CoolExpanderBlue">
        <Setter Property="Background" Value="DodgerBlue"/>
    </Style>
    <Style TargetType="Expander" BasedOn="{StaticResource CoolExpanderStyle}" x:Key="CoolExpanderOrange">
        <Setter Property="Background" Value="DarkOrange"/>
    </Style>
    <Style TargetType="Expander" BasedOn="{StaticResource CoolExpanderStyle}" x:Key="CoolExpanderRed">
        <Setter Property="Background" Value="OrangeRed"/>
    </Style>
    <Style TargetType="Expander" BasedOn="{StaticResource CoolExpanderStyle}" x:Key="CoolExpanderBlack">
        <Setter Property="Background" Value="Black"/>
    </Style>
    <Style TargetType="Expander" BasedOn="{StaticResource CoolExpanderStyle}" x:Key="CoolExpanderGold">
        <Setter Property="Background" Value="Goldenrod"/>
    </Style>
    <Style TargetType="Expander" BasedOn="{StaticResource CoolExpanderStyle}" x:Key="CoolExpanderPurple">
        <Setter Property="Background" Value="MediumOrchid"/>
    </Style>
    <Style TargetType="Expander" BasedOn="{StaticResource CoolExpanderStyle}" x:Key="CoolExpanderPink">
        <Setter Property="Background" Value="HotPink"/>
    </Style>
    <Style TargetType="Expander" BasedOn="{StaticResource CoolExpanderStyle}" x:Key="CoolExpanderSteel">
        <Setter Property="Background" Value="DarkSlateGray"/>
    </Style>
    <Style TargetType="Expander" BasedOn="{StaticResource CoolExpanderStyle}" x:Key="CoolExpanderTurquoise">
        <Setter Property="Background" Value="CadetBlue"/>
    </Style>
</ResourceDictionary>